definitions:
  auth.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      UserId:
        type: string
      password:
        type: string
    type: object
  auth.RegisterInput:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      password:
        type: string
      token:
        type: string
    required:
    - confirmPassword
    - email
    - password
    - token
    type: object
  auth.RegisterResponse:
    properties:
      message:
        type: string
    type: object
  auth.SendEmailOtpInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  auth.SendEmailResponse:
    properties:
      otp:
        description: 'todo: remove otp'
        type: string
      token:
        type: string
    type: object
  auth.VerifyOtpInput:
    properties:
      email:
        type: string
      otp:
        type: string
      token:
        type: string
    required:
    - email
    - otp
    - token
    type: object
  auth.VerifyOtpResponse:
    properties:
      token:
        type: string
    type: object
  orders.OrderCancelInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  orders.OrderCancelResponse:
    properties:
      UserId:
        type: string
      password:
        type: string
    type: object
  types.ErrMsg:
    properties:
      error:
        type: string
    type: object
host: localhost:1323
info:
  contact:
    email: instashop@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple e-commerce server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Instashop Swagger API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Auth_Login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/types.ErrMsg'
      tags:
      - Auth_Login
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Auth_Register
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/types.ErrMsg'
      tags:
      - Auth_Register
  /auth/send-otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: Auth_SendEmailOtp
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SendEmailOtpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/auth.SendEmailResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/types.ErrMsg'
      tags:
      - Auth_SendEmailOtp
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: Auth_VerifyOtp
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.VerifyOtpInput'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/auth.VerifyOtpResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/types.ErrMsg'
      tags:
      - Auth_VerifyOtp
  /orders/{id}:
    delete:
      parameters:
      - description: id of order
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Order_Delete
    get:
      parameters:
      - description: id of order
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Order_GetOne
    patch:
      parameters:
      - description: id of order
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Order_Update
    post:
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Order_Create
  /orders/cancel/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: id of order
        in: path
        name: id
        required: true
        type: string
      - description: Order_cancel
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/orders.OrderCancelInput'
      - description: MyHeader must be set for valid response
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/orders.OrderCancelResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/types.ErrMsg'
      tags:
      - Order_cancel
  /product/{id}:
    delete:
      parameters:
      - description: id of product
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Product_Delete
    patch:
      description: Product update
      parameters:
      - description: id of product
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Product_Update
  /products:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Product_GetAll
    post:
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Product_Create
  /products/{id}:
    get:
      parameters:
      - description: id of product
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Product_GetOne
swagger: "2.0"
